import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Collections;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		int n = Integer.parseInt(br.readLine());
		for (int i = 0; i < n; i++) {
			List<Integer> num = new LinkedList<Integer>();
			String in = br.readLine();
			
			while (in.contains("Z")) {
				num.add(0);
				in = removeWord(in, "ZERO");
			}
			while (in.contains("W")) {
				num.add(2);
				in = removeWord(in, "TWO");
			}
			while (in.contains("X")) {
				num.add(6);
				in = removeWord(in, "SIX");
			}
			while (in.contains("G")) {
				num.add(8);
				in = removeWord(in, "EIGHT");
			}
			while (in.contains("T")) {
				num.add(3);
				in = removeWord(in, "THREE");
			}			
			while (in.contains("R")) {
				num.add(4);
				in = removeWord(in, "FOUR");
			}
			while (in.contains("F")) {
				num.add(5);
				in = removeWord(in, "FIVE");
			}		
			while (in.contains("V")) {
				num.add(7);
				in = removeWord(in, "SEVEN");
			}			
			while (in.contains("I")) {
				num.add(9);
				in = removeWord(in, "NINE");
			}
			while (in.contains("O")) {
				num.add(1);
				in = removeWord(in, "ONE");
			}
			Collections.sort(num);
			StringBuffer sb = new StringBuffer();
			sb.append("Case #" + (i+1) + ": ");
			
			Iterator<Integer> it = num.iterator();
			while(it.hasNext()) {
				sb.append(it.next());
			}			
			sb.append("\n");
			bw.write(sb.toString());
		}
		
		bw.flush();
		br.close();
		bw.close();		
	}		
	
	private static String removeWord(String str, String word) {		
		for (int i = 0; i < word.length(); i++) {
			str = str.substring(0, str.indexOf(word.charAt(i))) 
					+ str.substring(str.indexOf(word.charAt(i)) + 1);
		}
		return str;
	}
}
